//===== rAthena Script =======================================
//= GM Handler
//===== By: ==================================================
//= Amethyst
//===== Current Version: =====================================
//= 2.0
//===== Compatible With: =====================================
//= rAthena + SQL
//===== Description: =========================================
//= Rewrite of original script
//= Removed unnecessary code
//= Added Support Ticket System
//= Formated list of GMs to show under categories
//= Converteed multiple if() into loops
//===== Additional Comments: =================================
//= <none>
//============================================================

eden,110,127,4	script	GM Handler::hand	971,{

	function getgm;
	function dispgm;
	function chardisplay;
	function mad;

	if(!getstrlen(.npc$))
		donpcevent "hand::OnInit";
	mad("@gms$","@gmo","@gmlvl");
	getgm;
	mes .npc$;
	mes "^FF0000Administrators^000000:";
	dispgm(1);
	mes "^0000FFGame Masters^000000";
	dispgm(2);
	mes "^00FF00GM Helpers^000000";
	dispgm(3);
	if(getgmlevel() >= .MinGM) {
		switch(prompt(implode(.GMMenu$,":"))) {
			case 1: // -- GM logon settings -- //
			GM_Menu:
				switch(select("Hide - "+((#autocommand&256) ? .on$:.off$),"Speed - "+((#autocommand&512) ? "0":"100"),"Warp - "+((#autocommand&1024) ? #warp$:"Off"),"Who3 - "+((#autocommand&2048) ? .on$:.off$),"Announce Login - "+((#autocommand&4096) ? .on$:.off$),"Proceed to other menu:Leave")) {
					case 1:
						set #autocommand,#autocommand^256;
						callsub GM_Menu;

					case 2:
						set #autocommand,#autocommand^512;
						callsub GM_Menu;

					case 3:
						if(#autocommand&1024) {
							mes "Input the word ^00FF00Off^000000 to turn off auto warp.";
							input #warp$;
							if(#warp$ == "off" || #warp$ == "Off")
								set #autocommand,#autocommand^1024;
							callsub GM_Menu;
						}
						set #autocommand,#autocommand^1024;
						input #warp$;
						callsub GM_Menu;

					case 4:
						set #autocommand,#autocommand^2048;
						callsub GM_Menu;
					
					case 5:
						set #autocommand,#autocommand^4096;
						callsub GM_Menu;
					
					case 6:
						break;
					
					case 7: close;
				}
				break;
			case 2: // -- GM Support Tickets -- //
				next;
				mes .npc$;
				mes "Coming soon...";
				mes " - Amethyst";
				close;
			case 3: // -- GM News -- //
				next;
				callfunc("newsgm");
			case 4:	// -- Reload OnInit -- //
				next;
				mes .npc$;
				mes "Would you like to reload settings?";
				if(select("Yes:No")-1) close;
				donpcevent "hand::OnInit";
				mes "Reloaded.";
				close;
			case 5: // -- Grant GM -- //
				next;
				mes .npc$;
				mes "Here you can change an account into a GM account.";
				mes "Would you like to do so?";
				if(2-select("No:Yes")) close;
				next;
				mes .npc$;
				mes "Please input the name of the player you want to make a GM.";
				input .@p$;
				if(!query_sql("select account_id from `char` where name = '"+escape_sql(.@p$)+"'",.@acc)) {
					mes "No characters found.";
					close;
				}
				mes "Please select a group level for this character.";
				switch(prompt("40 - GM Assistant:60 - Event GM:80 - GM Enforcer:99 - Administrator")) {
					case 1: set .@lvl,40; break;
					case 2: set .@lvl,60; break;
					case 3: set .@lvl,80; break;
					case 4: set .@lvl,99; break;
					case 255:
						mes "Please come again!";
						close;
				}
				next;
				mes .npc$;
				mes "Please confirm your options";
				mes "Player: ^00FF00"+.@p$+"^000000";
				mes "Level: ^00FF00"+.@lvl+"^000000";
				if(2-select("No:Yes")) close;
				query_sql("update login set group_id = "+.@lvl+" where account_id = "+.@acc);
				mes "GM Granted.";
				close;
			case 255: // -- Cancel -- //
				mes .npc$;
				mes "Please come again!";
				close;
		}
	}
	switch(prompt(implode(.PlayerMenu$,":"))) {
		case 1:	// -- Logon Settings -- //
		P_Menu:
			switch(prompt("Main - "+((#autocommand&1) ? .on$:.off$),"Autoloot - "+((#autocommand&2) ? "^00FF00"+#aloot+"^000000":.off$),"Showexp - "+((#autocommand&4) ? .on$:.off$),"Leave")) {
				case 1:	// -- Main -- //
					set #autocommand,#autocommand^1;
					callsub P_Menu;
				case 2: // -- Autoloot -- //
					if(#autocommand&2) {
						input #aloot;
						if(#aloot == 0)
							set #autocommand,#autocommand^2;
						callsub P_Menu;
					}
					set #autocommand,#autocommand^2;
					input #aloot;
					callsub P_Menu;
				case 3: // -- ShowExp -- //
					set #autocommand,#autocommand^4;
					callsub P_Menu;
				case 4:
					close;
				case 255:
					mes .npc$;
					mes "Please come again!";
					close;
			}
		case 2:	// -- Support Ticket -- //
			next;
			mes .npc$;
			mes "Coming soon...";
			mes " - Amethyst";
			close;
		case 255:	// -- Pushed Cancel -- //
			mes .npc$;
			mes "Please come again!";
			close;
	}

OnPCLoginEvent:
	set .@rid,getcharid(3);
	chardisplay(1);
	attachrid(.@rid);
	if(!getstrlen(.npc$))
		donpcevent "hand::OnInit";
	if(!(#autocomman&1073741824))
		set #autocommand,#autocommand|1073741824;
	if(getgmlevel() >= .MinGM) {
		for(set .@i,1; .@i <= getarraysize(.GMAUTO$); set .@i,.@i+1) {
			if(#autocommand&(256<<(.@i-1)))
				atcommand .GMAUTO$[.@i-1]+" "+((.@i==3)?#warp$:"");
		}
	}
	for(set .@i,1; .@i <= getarraysize(.PLAUTO$); set .@i,.@i+1) {
		if(#autocommand&(1<<(.@i-1)))
			atcommand .PLAUTO$[.@i-1]+((.@i==2)?" "+#aloot:"");
	}

	if(#autocommand&4096 && getgmlevel() >= 99)
		announce "Administrator "+strcharinfo(0)+" has signed in.",bc_all,0x00ff66;
	else if(#autocommand&4096 && getgmlevel() < 99 && getgmlevel() >= .MinGM)
		announce "GM "+strcharinfo(0)+" has signed in.",bc_all,0x00ff66;
	callfunc("news",1);
	close;
	end;
OnPCLogoutEvent:
	// -- Display when character logs off -- //
	chardisplay(0);
	end;

OnInit:
	mad(".PlayerMenu$",".GMMenu$",".GMAUTO$",".PLAUTO$");
	set .npc$,"[^FF309BGM Handler^000000]";
	set .Online$,"^00FF00Online^000000";
	set .Offline$,"^FF0000Offline^000000";
	set .on$,"^00FF00On^000000";
	set .off$,"^FF0000Off^000000";
	set .MinGM,60;
	setarray .PlayerMenu$[0],"Adjust logon settings","Submit a support ticket";
	setarray .GMMenu$[0],"Adjust GM logon settings","View support tickets","GM News","Reload GM Handler settings";
	setarray .GMAUTO$[0],"@hide","@speed 0","@warp","@who3";
	setarray .PLAUTO$[0],"@main on","@autoloot","@showexp";
	end;

	function	getgm	{
		mad("$@gmlist$","$@gmo","$@gmlvl");
		query_sql("select login.account_id,`char`.name,`char`.online,login.group_id from `char` inner join login on `char`.account_id = login.account_id where login.group_id >= "+.MinGM+" order by login.account_id,`char`.char_id asc",.@acc,.@name$,.@on,.@gid);
		for(set .@i,0; .@i < getarraysize(.@acc); set .@i,.@i+1) {
			if(.@acc[.@i] == $@lastacc)
				continue;
			setarray $@gmlist$[.@i],.@name$[.@i];
			setarray $@gmo[.@i],.@on[.@i];
			setarray $@gmlvl[.@i],.@gid[.@i];
			set $@lastacc,.@acc[.@i];
		}
		copyarray @gm$[0],$@gmlist$[0],getarraysize($@gmlist$);
		copyarray @gmo[0],$@gmo[0],getarraysize($@gmo);
		copyarray @gmlvl[0],$@gmlvl[0],getarraysize($@gmlvl);
		mad("$@acc","$@gmlist$","$@gmo");
		set $@lastacc,0;
		return;
	}
	function	dispgm	{
		for(set .@i,0; .@i < getarraysize(@gmlvl); set .@i,.@i+1) {
			if(@gm$[.@i] == "")
				continue;
			switch(getarg(0)) {
				case 1:
					if(@gmlvl[.@i] >= 99)
						mes " ~ "+@gm$[.@i]+": "+((@gmo[.@i]) ? .Online$:.Offline$);
					break;
				case 2:
					if(@gmlvl[.@i] < 99 && @gmlvl[.@i] >= 60)
						mes " ~ "+@gm$[.@i]+": "+((@gmo[.@i]) ? .Online$:.Offline$);
					break;
				case 3:
					if(@gmlvl[.@i] < 60)
						mes " ~ "+@gm$[.@i]+": "+((@gmo[.@i]) ? .Online$:.Offline$);
					break;
			}
		}
	}
	function	chardisplay	{
		set .@player$,strcharinfo(0);
		query_sql("SELECT `account_id` FROM `login` WHERE `group_id` >= "+.MinGM,.@acts);
		detachrid;
		for(set .@i,0; .@i < getarraysize(.@acts); set .@i,.@i+1) {
			if(!attachrid(.@acts[.@i])) continue;
			dispbottom .@player$+" has signed "+((getarg(0)) ? "in.":"out.");
			detachrid;
		}
		return;
	}
	function mad {
		for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
			deletearray getd(getarg(.@i)+"[0]"),getarraysize(getd(getarg(.@i)));
		return;
	}
}