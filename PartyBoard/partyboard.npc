/*= Party Notice Board =*/
/*= Coded by: IeYasuru =*/
/*= Date: April 11, 2015 =*/
/*- Revision: 1 =*/
/*= External Functions:
	None
=*/

prontera,155,153,4	script	Party Board::pboard	2_BULLETIN_BOARD,{

	function get_char_name {
		.@pos = strpos(getarg(0),"[");
		//mes ".@pos: "+ .@pos;
		.@charName$ = substr(getarg(0),0,.@pos-2);
		//mes ".@charName$: "+ .@charName$;
		return .@charName$;
	}
	function strip_color_code {
		return substr(getarg(0),7,getstrlen(getarg(0))-8);
	}
	function parse_party_list {
		for(.@i = 0; .@i < getarraysize($@PB_PartyBoard$); .@i++) {
			.@name$ = get_char_name($@PB_PartyBoard$[.@i]);
			.@name$ = strip_color_code(.@name$);
			//mes ".@name$: "+ .@name$;
			if(getarg(0)) {
				if(.@name$ == strcharinfo(0)) {
					deletearray $@PB_PartyBoard$[.@i],1;
					break;
				}
			}
			if(getmapxy(.@m$,.@x,.@y,0,.@name$) || getcharid(1,.@name$)) {
				deletearray $@PB_PartyBoard$[.@i],1;
			}
		}
		return;
	}
	
	mes .npc$;
	parse_party_list(0);
	mes "Welcome, "+ strcharinfo(0) +", to the Party Board Service provided to you by the Crystal Core Group.";
	if(@PB_Registered) {
		next;
		mes .npc$;
		mes "You've already registered to look for a party.";
		mes "Would you like to cancel your registration?";
		switch(select("Yes:No")) {
			case 1:
				parse_party_list(1);
				@PB_Registered = 0;
				mes "You've been removed from the registration list.";
				mes " ";
				break;
				
			case 2:
				close;
		}
	}
	mes "What would you like to do today?";
	switch(select(implode(.Menu_Ops$,":"))) {
		case 1: /*= Looking for Party (LPM) =*/
			callsub PB_LFP;
			break;
			
		case 2: /*= Looking for Memeber (LFM) =*/
			callsub PB_LFM;
			break;
	}
	
PB_LFP:
	next;
	mes .npc$;
	if(getcharid(1)) {
		mes "You are already a member of a party.";
		mes "If you would like to register here you must leave your current party.";
		close;
	}
	mes "Would you like to register to the party board? If you do, other players will be able to see your class and level to determine if they want to add you to their party.";
	switch(select("Yes:No")) {
		case 1:
			$@PB_PartyBoard$[getarraysize($@PB_PartyBoard$)] = "^0000FF"+ strcharinfo(0) +"^000000 [^FF0000"+ jobname(Class) +"^000000 ^FF0000Lv.^000000 "+ BaseLevel +"/"+ JobLevel +"]";
			@PB_Registered = 1;
			parse_party_list(0);
			mes "I've added you to the list. Once someone selects you, I will forward you a party invitation on their behalf.";
			mes "Have a great day.";
			close;
			
		case 2:
			mes "That's too bad. If you change your mind, please speak to me again.";
			close;
	}
	return;

PB_LFM:
	next;
	mes .npc$;
	mes "Would you like to look through the listing for players currently looking to join a party?";
	switch(select("Yes:No")) {
		case 1:
			if(!getcharid(1)) {
			mes "I'm sorry, but you are not currently in a party.";
			mes "Would you like me to guide you to the ^0000FFLooking for Party (LFP)^000000 menu?";
				switch(select("Yes:No")) {
					case 1:
						callsub PB_LFP;
					
					case 2:
						close;
				}
			}
			if(getpartyleader(getcharid(1),2) != getcharid(0)) {
				mes "I'm sorry, but you are not the leader of your party. Please have your party leader speak to me to look for new party members.";
				close;
			}
			parse_party_list(0);
			next;
			mes .npc$;
			if(!getarraysize($@PB_PartyBoard$)) {
				mes "I'm sorry, but there is currently nobody looking for a party.";
				mes "Try again next time!";
				close;
			}
			// /*= If necessary, add in level range selection here =*/
			mes "These are the players currently interested in joining a party.";
			switch(select(implode($@PB_PartyBoard$,":"))) {
				default:
					mes "Your choice was: ^0000FF"+ get_char_name($@PB_PartyBoard$[@menu-1]);
					mes "^000000";
					mes "Is this correct?";
					switch(select("Yes:No")) {
						case 1:
							mes "Great. I shall ask the person if they're willing to join your party.";
							.@curPl = getcharid(3);
							.@curPlName$ = strcharinfo(0);
							.@curPlLv = BaseLevel;
							getmapxy(.@m$,.@x,.@y,0);
							next;
							.@charName$ = strip_color_code(get_char_name($@PB_PartyBoard$[@menu-1]));
							detachrid;
							if(!attachrid(getcharid(3,.@charName$))) {
								if(!attachrid(.@curPl))
									end;
								mes .npc$;
								if(!getstrlen(.@charName$)) {
									mes "I'm sorry, that character has either joined another party or withdrew their registration.";
								} else {
									mes "I'm sorry, it seems that player is no longer online.";
								}
								mes "Would you like to try again?";
								switch(select("Yes:No")) {
									case 1:
										callsub PB_LFM;
										
									case 2:
										close;
								}
							}
							mes .npc$;
							mes "You've been invited to join a party!";
							mes "Party Leader: ^0000FF"+ .@curPlName$;
							mes "^000000Party Leader Lv.: ^00FF00"+ .@curPlLv;
							mes "^000000";
							mes "Would you like to warp to ^FF0000"+ .@m$ +"^000000 to meet the party leader?";
							switch(select("Yes:No")) {
								case 1:
									.@invited = 1;
									warp .@m$,.@x-2,.@y-2;
									break;
									
								case 2:
									mes "I will inform the leader you declined the invitation.";
									close2;
									break;
							}
							detachrid;
							if(!attachrid(.@curPl))
								end;
							mes .npc$;
							if(.@invited) {
								mes "Your new party should appear approximately 2 cells left and down from your current positon.";
								mes "Have a nice day and thank you for using the Party Board serviced provided to you by Crystal Core Group.";
								parse_party_list(0);
								close;
							}
							mes "The player has declined your invitation and decided not to join your party.";
							
						case 2:
							mes "Would you like to search for a new party member?";
							switch(select("Yes:No")) {
								case 1:
									callsub PB_LFM;
									
								case 2:
									close;
							}
							break;
					}
			}
			
		case 2:
			close;
	}
	return;
	
OnInit:
	.npc$ = "[Party Notice Board]";
	.Menu_Ops$[0] = "Looking for Party (LFP)";
	.Menu_Ops$[1] = "Looking for Member (LFM)";
	$@PB_PartyBoard$[0] = "";
	initnpctimer;
	end;
	
OnTimer1000:
	parse_party_list(0);
	delwaitingroom;
	waitingroom getarraysize($@PB_PartyBoard$) +" Registrations",0;
	setnpctimer 0;
	end;
}