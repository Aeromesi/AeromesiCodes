/*		Farm Instance creator script
		Created by: Aeromesi
		Comments: None
		Built for Hercules
*/
prontera,148,146,4	script	[Farm] Instances	4_M_EINMINER,{
	if( has_instance( "1@def01" ) != "" ) {
			warp ("1@def01",50,50);
}
        .name = 0;
        .@size = getarraysize( .GMList$ ); // get listing names of array
        for ( .@name = 1; .name <= .@size; .name++ ) { // run for loop on name list
        if( strcharinfo(PC_NAME) == .GMList$[.name]  ) // if attached players name is equal to array names
        callsub GM_Menu; // enter gm menu
        }
        callsub Player_Menu; // enter player menu
        end;
	GM_Menu:
	mes .insn$;
	mes "Hello GM "+.GMList$[.name]+".";
	mes "What would you like to do?";
	next;
	switch (select(
		"Farming Instances"
		,"Player Menu"
		,""+ (($EnableNPCF)?
		"[^FF0000Disable^000000]"
		" Farm Zones":"[^006400Enable^000000] "" Farm Zones")+ "")) {

			case 1:
				.current = 1;
				mes .insn$;
				mes "What would you like to do with your Custom Farm Zones?";
				next;
				switch(select(
				"[Click First] Farm Zone Amounts" // 1
				,"[Create] Farm Zones"))
				{

					case 1:
						if ( $InstFarmEdit[1] ) {
						mes .insn$;
						mes .ErrorCodes$[4];
						next;
						break;
					}

						input $insMaxF;
					if ( $insMaxF <= 0 ) {
						dispbottom "Cannot enter 0. Switching to Edit Menu.";
						break;
					}

					for ( .@i = 1; .@i <= $insMaxF; .@i++ )
					{
					// Farm stuff
						$insStringF$[.@i] = "No Name information";
						$InstFarmColors$[.@i] = "No Color information";
						consolemes 0,"this got iteratated "+.@i+" times";
					}
						dispbottom "Amount of Farm Zones: "+$insMaxF+".";
						$InstFarmEdit[1] = 1;
//						next;
						callsub GM_Menu;
						end;
	case 2:
	CreateF_Ins:
//	switch(select(implode($insStringF$,":"))) {
//for ( .@i = 1; .@i <= $insStringF$; .@i++ ) {
//	dispbottom ""+.@i+".) "+$insStringF$[.@i-1]+"";
//}
//	if ( !$clickedCreateFirst )
	.@choice = select(implode( $insStringF$ ,":"));
	.@size = getarraysize(.@choice);
	.InstanceNum = .@choice;

	mes "Please type out the name of your Farm Zone.";
	input $insStringF$[.InstanceNum-1];
	next;
	mes "Please input the delay time you want before re-entrance of player.";
	input $minDelay[.InstanceNum-1];
	next;
	mes "Please input the Item ID you want to get for the Farm Zone.";
	next;
	input $FItemID[.InstanceNum-1];
	next;
	mes "Please input the Max amount of items or whatever you want them to gain per attempt at the Farm Zone.";
	input $FMaxItemLimit[.InstanceNum-1];
	next;
	mes "Please input the rate at which you want the player to receive the rewards for Farming.";
	input $FItemRate[.InstanceNum-1];
	next;
	mes .@insv$;
	mes "Alright, please input Monster 1.";
FMOB_INPUT:
	input $FMob1ID[.InstanceNum-1];
	next;
	if(getmonsterinfo($FMob1ID[.InstanceNum-1],MOB_LV)<0 || getmonsterinfo($FMob1ID[.InstanceNum-1],MOB_NAME)=="Dummy") {

		dispbottom "Please enter valid Monster ID";
		callsub FMOB_INPUT;
		end;
}
	mes .insn$;
	mes "How many of "+strmobinfo(1,$FMob1ID[.InstanceNum-1])+" would you like to spawn?";
FMOB1_INPUTAM:
	input $FMob1AM[.InstanceNum-1];
	if($FMob1AM[.InstanceNum-1] == 0) {
	dispbottom "Sorry, but it's impossible to enter 0 monsters.";
	dispbottom "Please reinput "+strmobinfo(1,$FMob1ID[.InstanceNum-1])+"'s amount.";
	callsub FMOB1_INPUTAM;
	end;
}
	mes "Alright, monster 1 will be ["+strmobinfo(1,$FMob1ID[.InstanceNum-1])+"] x ("+$FMob1AM[.InstanceNum-1]+").";
next;
	mes .insn$;
	mes "Please input Monster 2.";
FMOB2_INPUT:
	input $FMob2ID[.InstanceNum-1];
	if(getmonsterinfo($FMob2ID[.InstanceNum-1],MOB_LV)<0 || getmonsterinfo($FMob2ID[.InstanceNum-1],MOB_NAME)=="Dummy") {

		dispbottom "Please enter valid Monster ID";
		callsub FMOB2_INPUT;
		end;
}
	mes "How many of "+strmobinfo(1,$FMob2ID[.InstanceNum-1])+" would you like to spawn?";
FMOB2_INPUTAM:
	input $FMob2AM[.InstanceNum-1];
	if($FMob2AM[.InstanceNum-1] == 0) {
	dispbottom "Sorry, but it's impossible to enter 0 monsters.";
	dispbottom "Please reinput "+strmobinfo(1,$FMob2ID[.InstanceNum-1])+"'s amount.";
	.InstanceNum++;
	callsub FMOB2_INPUTAM;
	end;
}
	mes "Alright, monster 2 will be ["+strmobinfo(1,$FMob2ID[.InstanceNum-1])+"] x ("+$FMob2AM[.InstanceNum-1]+").";
next;
		mes "[^FF0000"+$insStringF$[.InstanceNum-1]+"^000000]";
	mes "Monster Info:";
	mes "1. [^7D26CD"+strmobinfo(1,$FMob1ID[.InstanceNum-1])+"^000000] x (^0000FF"+$FMob1AM[.InstanceNum-1]+"^000000).";
	mes "2. [^7D26CD"+strmobinfo(1,$FMob2ID[.InstanceNum-1])+"^000000] x (^0000FF"+$FMob2AM[.InstanceNum-1]+"^000000).";
	mes "Delay for Re-entry: ^0000FF"+$minDelay[.InstanceNum-1]+"^000000 minutes.";
	mes "Item Limit until completion: ^0000FF"+$FMaxItemLimit[.InstanceNum-1]+"^000000.";
	mes "Rate of Obtaining Reward: ^0000FF"+$FItemRate[.InstanceNum-1]+"^000000%.";
	close;
}
	case 2:				
		callsub Player_Menu;
		end;

	case 3:
	if ( !$EnableNPCF )
	{
		dispbottom ""+strnpcinfo(0)+" Farm Zones enabled.";
		$EnableNPCF = 1;
		callsub GM_Menu;
		end;
	}
	if ( $EnableNPCF )
	{
		dispbottom ""+strnpcinfo(0)+" Farm Zones disabled.";
		$EnableNPCF = 0;
		callsub GM_Menu;
		end;
	}
}


	Player_Menu:
	mes .insn$;
	mes "What would you like to do "+strcharinfo(PC_NAME)+"?";
	next;
	switch(select("Farm Zones","Exit")) {

	case 1:
	if ( !$EnableNPCF )
	{
		mes "^FF0000"+strnpcinfo(PC_NAME)+"^000000";
		mes "Farm Zones is currently ^FF0000disabled^000000.";
		close;
	}
		mes "Farm Zone Designer: ^FF0000"+$InstFarmDesigner$+"^000000.";

	InsF_Choice:
	.@choice = select(implode( $insStringF$ ,":"));
	.@size = getarraysize(.@choice);
	.InstanceNum = .@choice;
	mes "[^FF0000"+$insStringF$[.InstanceNum-1]+"^000000 Zone]";
	mes "Monster Info:";
	mes "1. [^7D26CD"+strmobinfo(1,$FMob1ID[.InstanceNum-1])+"^000000] x (^0000FF"+$FMob1AM[.InstanceNum-1]+"^000000).";
	mes "2. [^7D26CD"+strmobinfo(1,$FMob2ID[.InstanceNum-1])+"^000000] x (^0000FF"+$FMob2AM[.InstanceNum-1]+"^000000).";
	mes "Delay for Re-entry: ^0000FF"+$minDelay[.InstanceNum-1]+"^000000 minutes.";
	mes "Item Limit until completion: ^0000FF"+$FMaxItemLimit[.InstanceNum-1]+"^000000.";
	mes "Rate of Obtaining Reward: ^0000FF"+$FItemRate[.InstanceNum-1]+"^000000%.";
	next;
			if( gettimetick(2) < #farmHuntDelay[.InstanceNum-1] ) {
				.@name$ = strcharinfo(0);
				.@time = #farmHuntDelay[.InstanceNum-1] - gettimetick(2);
				attachrid( .@self );
				mes "Sorry "+ .@name$ +" you must wait ^FF0000"+ callfunc( "timeleft__", .@time ) +"^000000 before entering the "+.@md_name$+" Dungeon again.";
				close2;
				cutin "", 255;
				end;
			}
		.@instance = instance_create( $insStringF$[.InstanceNum-1], getcharid( 3 ), IOT_CHAR);
		if( .@instance < 0 ) { 
			dispbottom "Instance Failed.";
			close;
		}
		dispbottom "" + $insStringF$[.InstanceNum-1] + "- Attempting to create Farm Instance.";
		if( instance_attachmap("1@def01",.@instance) == "" ) {
			instance_destroy( .@instance );
			dispbottom "Failed to instance 1@def01";
			end;
		}

		dispbottom "" + $insStringF$[.InstanceNum-1] + " attempt successful on Instance attach!";
		instance_set_timeout( 3600, 120, .@instance ); // 3600 is 60 min how long instance stay on 300 is 5 min idle if you leave instance destroy in 5 min 
		instance_init( .@instance );
		instance_attach .@instance;

	'option = .InstanceNum-1;
	'delayMin = $minDelay[.InstanceNum-1];
	'FMaxItemLimit = $FMaxItemLimit[.InstanceNum-1];
	'FItemRate = $FItemRate[.InstanceNum-1];
	'FItemID = $FItemID[.InstanceNum-1];
	'MOB1ID = $FMob1ID[.InstanceNum-1];
	'MOB2ID = $FMob2ID[.InstanceNum-1];
	'MOB1AM = $FMob1AM[.InstanceNum-1];
	'MOB2AM = $FMob2AM[.InstanceNum-1];
	'MobTOTAL = 'MOB1AM+'MOB2AM;
	'Farm_Count = 0;
	'Farm_Start = 0;
		'cid = getcharid(0);
		'aid = getcharid(3);
		#farmHuntDelay['option] = gettimetick(2) + ( 'delayMin['option] * 60 );
		#farmHunt['option] = 0;
	if (!'Farm_Start) 
{
		donpcevent instance_npcname("FarmInstance#InsSys")+"::OnFarmStart";
		'Farm_Start++;
		warp ("1@def01",50,50);
		end;
	}
		case 2:
		mes .insn$;
		mes "If you change your mind come back!";
		close;

}
	

	OnInit:
		.insn$ = "^FF0000"+strnpcinfo(PC_NAME)+"^000000";
		bindatcmd ("resetfarm",strnpcinfo(0)+"::OnAtFarmReset",99);
		setarray ( .GMList$[1],"Aeromesi","Aeromesi2","Aeromesi3","NewName","OMG","eeeee" );
		setarray ( .ErrorCodes$[1]
		,"You haven't setup the Instance Amount yet. Please proceed to do so before this action."
		,"You haven't setup the Farm Zone Amount yet. Please proceed to do so before this action."
		,"You have already setup the Instance Amount, you cannot re-edit unless you reset your configurations."
		,"You have already setup the Farm Zone amounts, you cannot re-edit unless you reset your configurations."
		,"[WARNING] If you don't input Hex color code, problem will occur..." );
		end;
	
	OnAtFarmReset:
	$EnableNPCF = 0;
		$InstFarmEdit[1] = 0;
		dispbottom "Reset Farm Zone configurations";
		deletearray $insStringF$;
		deletearray $minDelay;
		$InstFarmDesigner$ = "";
//		setarray $insStringF$[0],"F Zone 1","F Zone 2","F Zone 3";
		setarray $insMaxF, 3;
		end;
}
1@def01,43,77,1	script	FarmInstance#InsSys	HIDDEN_NPC,{

OnInstanceInit:
disablenpc instance_npcname("Mining Guy#1");
end;

OnFarmStart:
	instance_announce -1,"[Farming Instance] Enjoy farming some items!",bc_map;
	monster instance_mapname("1@def01",.@instance),50,34,"[ Farm Zone ] Mob",'MOB1ID,'MOB1AM,instance_npcname("FarmInstance#InsSys")+"::OnFarmItem";
	monster instance_mapname("1@def01",.@instance),50,49,"[ Farm Zone ] Mob",'MOB2ID,'MOB2AM,instance_npcname("FarmInstance#InsSys")+"::OnFarmItem";
	end;

OnFarmItem:
if ( #farmHunt['option] >= 'FMaxItemLimit )
	
	{
	dispbottom "[ Farm Zone ] : You are trying to abuse Farm Zone! Prematurely ending.";
			sleep2 500;
			#farmHuntDelay['option] = gettimetick(2) + ( 'delayMin['option] * 60 );
			#farmHunt['option] = 0;
			warp "prontera",150,150;
			instance_destroy();
			end;
}
	if ( rand(100) < 'FItemRate ) 
	{
		#farmHunt['option]++;
		'Farm_Count++;
		dispbottom "[ Farm Zone ] : Farmed "+#farmHunt['option]+" / "+'FMaxItemLimit+" Items";
		if( #farmHunt['option] >= 'FMaxItemLimit ) 
		{
			getitem 'FItemID, 1;
			message strcharinfo(PC_NAME),"Limit Reach , you may join again later.";
			sleep2 500;
			#farmHunt['option] = 0;
			warp "prontera",150,150;
			instance_destroy();
			end;
		}
		donpcevent instance_npcname("FarmInstance#InsSys")+"::OnCountFarm";;
		getitem 'FItemID, 1;
	} else {
		dispbottom "Sorry, you didn't obtain an item! Keep farming!";
		'Farm_Count++;
		donpcevent instance_npcname("FarmInstance#InsSys")+"::OnCountFarm";
		end;
	}
	end;


OnCountFarm:
	.@count = getunits((BL_MOB ), .@units, false, instance_mapname("1@def01"));
	.@count = .@count-1;
		consolemes 0,""+.@count+" mob left";
	if ( .@count == 0 )
		consolemes 0,"0 monsters left";
	if ('Farm_Count >= 'MobTOTAL) {

		if( attachrid('aid) )
			if( getcharid(0) == 'cid )
				{
				instance_announce -1,"[Farming Instance] Farming instance Completed.",bc_map;
				#farmHuntDelay['option] = gettimetick(2) + ( 'delayMin['option] * 60 );
				#farmHunt['option] = 0;
				sleep2 5000;
				instance_destroy();
				end;
			}
			else
				end;
	}
}
1@def01,42,48,4	script	Mining Guy#1	4_M_EINMINER,{

		.@miningNpc$ = "[^FF0000Mining Guy^000000]";
		mes .@miningNpc$;
	if( has_instance( "1@def01" ) != "" ) {
			mes "Your Farm Zone is active!";
			mes "I'll warp you for free there too!";
			next;
			warp ("1@def01",50,50);
			end;
}
		mes "Hey wanna talk to my co-worker and farm some valuable resources?";
		mes "I'll warp you for free!";
		next;
		switch(select("Sure.","No thanks.")) {
		case 1:
		getmapxy(.@mapname$, .@mapx, .@mapy, UNITTYPE_NPC, "[Farm] Instances");
			warp .@mapname$,.@mapx,.@mapy;
			end;

		case 2:
		mes .@miningNpc$;
		mes "Come back if you change your mind.";
		close;
}
}
alberta,124,59,3	duplicate(Mining Guy#1)	Mining Guy#2	4_M_EINMINER
jawaii,226,190,3	duplicate(Mining Guy#1)	Mining Guy#3	4_M_EINMINER
morocc,150,84,3	duplicate(Mining Guy#1)	Mining Guy#4	4_M_EINMINER
geffen,126,62,3	duplicate(Mining Guy#1)	Mining Guy#5	4_M_EINMINER
payon,122,151,3	duplicate(Mining Guy#1)	Mining Guy#6	4_M_EINMINER
aldebaran,143,127,3	duplicate(Mining Guy#1)	Mining Guy#7	4_M_EINMINER
xmas,143,138,3	duplicate(Mining Guy#1)	Mining Guy#8	4_M_EINMINER
comodo,191,141,3	duplicate(Mining Guy#1)	Mining Guy#9	4_M_EINMINER
yuno,164,46,3	duplicate(Mining Guy#1)	Mining Guy#10	4_M_EINMINER
amatsu,201,83,3	duplicate(Mining Guy#1)	Mining Guy#11	4_M_EINMINER
gonryun,165,119,3	duplicate(Mining Guy#1)	Mining Guy#12	4_M_EINMINER
umbala,85,164,3	duplicate(Mining Guy#1)	Mining Guy#13	4_M_EINMINER
niflheim,212,187,3	duplicate(Mining Guy#1)	Mining Guy#14	4_M_EINMINER
louyang,211,110,3	duplicate(Mining Guy#1)	Mining Guy#15	4_M_EINMINER
ayothaya,145,111,3	duplicate(Mining Guy#1)	Mining Guy#16	4_M_EINMINER
einbroch,56,199,3	duplicate(Mining Guy#1)	Mining Guy#17	4_M_EINMINER
lighthalzen,167,87,3	duplicate(Mining Guy#1)	Mining Guy#18	4_M_EINMINER
einbech,133,105,3	duplicate(Mining Guy#1)	Mining Guy#19	4_M_EINMINER
hugel,89,149,3	duplicate(Mining Guy#1)	Mining Guy#20	4_M_EINMINER